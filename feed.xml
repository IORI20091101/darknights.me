<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="http://jekyllrb.com" version="3.4.2">Jekyll</generator><link href="/feed.xml" rel="self" type="application/atom+xml" /><link href="/" rel="alternate" type="text/html" /><updated>2017-10-30T08:56:01+00:00</updated><id>/</id><subtitle>Dark knight's的个人技术博客,专注于web开发,追求前端最完美体验</subtitle><entry><title type="html">git的使用教程(一)</title><link href="/%E6%8A%80%E6%9C%AF%E6%96%87%E7%AB%A0/2017/10/12/git-base/" rel="alternate" type="text/html" title="git的使用教程(一)" /><published>2017-10-12T00:00:00+00:00</published><updated>2017-10-12T00:00:00+00:00</updated><id>/%E6%8A%80%E6%9C%AF%E6%96%87%E7%AB%A0/2017/10/12/git-base</id><content type="html" xml:base="/%E6%8A%80%E6%9C%AF%E6%96%87%E7%AB%A0/2017/10/12/git-base/">&lt;h2 id=&quot;git的初级使用教程&quot;&gt;git的初级使用教程&lt;/h2&gt;

&lt;p&gt;记录常用的git命令,方便自己查询&lt;/p&gt;

&lt;h2 id=&quot;创建新仓库&quot;&gt;创建新仓库&lt;/h2&gt;
&lt;pre&gt;&lt;code class=&quot;language-java&quot;&gt;    git init
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;##检出新仓库&lt;/p&gt;
&lt;h3 id=&quot;clone本地仓库&quot;&gt;clone本地仓库&lt;/h3&gt;
&lt;pre&gt;&lt;code class=&quot;language-java&quot;&gt;    git clone /path/to/repository
&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id=&quot;从远程仓库clone&quot;&gt;从远程仓库clone&lt;/h3&gt;
&lt;pre&gt;&lt;code class=&quot;language-java&quot;&gt;    git clone username@host:/path/to/repository
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&quot;工作流&quot;&gt;工作流&lt;/h3&gt;
&lt;blockquote&gt;
  &lt;p&gt;你的本地仓库由 git 维护的三棵“树”组成。第一个是你的 工作目录，它持有实际文件；第二个是 暂存区（Index），它像个缓存区域，临时保存你的改动；最后是 HEAD，它指向你最后一次提交的结果。&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;img src=&quot;https://darknights.b0.upaiyun.com/assets/images/trees.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;h3 id=&quot;添加和提交&quot;&gt;添加和提交&lt;/h3&gt;
&lt;pre&gt;&lt;code class=&quot;language-java&quot;&gt;    git add &amp;lt;filename&amp;gt;
    git add *
    git add .     //添加到缓存区

    git commit -m &quot;代码提交信息&quot;   //提交到本地仓库
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&quot;推送改动&quot;&gt;推送改动&lt;/h3&gt;
&lt;p&gt;你的改动现在已经在本地仓库的 HEAD 中了。执行如下命令以将这些改动提交到远端仓库：&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-java&quot;&gt;    git push origin master
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;可以把 master 换成你想要推送的任何分支。&lt;/p&gt;

&lt;p&gt;如果你还没有克隆现有仓库，并欲将你的仓库连接到某个远程服务器，你可以使用如下命令添加：&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-java&quot;&gt;    git remote add origin &amp;lt;server&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;如此你就能够将你的改动推送到所添加的服务器上去了。&lt;/p&gt;

&lt;h3 id=&quot;分支&quot;&gt;分支&lt;/h3&gt;
&lt;p&gt;分支是用来将特性开发绝缘开来的。在你创建仓库的时候，master 是“默认的”分支。在其他分支上进行开发，完成后再将它们合并到主分支上。
&lt;img src=&quot;https://darknights.b0.upaiyun.com/assets/images/branches.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;创建一个叫做“feature_x”的分支，并切换过去：&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-java&quot;&gt;    git checkout -b feature_x
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;切换回主分支：&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-java&quot;&gt;    git checkout master
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;再把新建的分支删掉：&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-java&quot;&gt;    git branch -d feature_x
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;除非你将分支推送到远端仓库，不然该分支就是 不为他人所见的：&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-java&quot;&gt;    git push origin &amp;lt;branch&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&quot;更新与合并&quot;&gt;更新与合并&lt;/h3&gt;

&lt;pre&gt;&lt;code class=&quot;language-java&quot;&gt;    git pull   //相当于 git fetch and git merge两个操作
    git diff &amp;lt;source_branch&amp;gt; &amp;lt;target_branch&amp;gt;  //如果有冲突解决完冲突可以这样查看两个分支差别
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&quot;标签&quot;&gt;标签&lt;/h3&gt;
&lt;p&gt;以执行如下命令创建一个叫做 1.0.0 的标签：&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-java&quot;&gt;    git	 tag 1.0.0 1b2e1d63ff //b2e1d63ff 是你想要标记的提交 ID 的前 10 位字符
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&quot;log&quot;&gt;log&lt;/h3&gt;

&lt;pre&gt;&lt;code class=&quot;language-java&quot;&gt;    git log //查看所有日志

    git log --author=toshiba  //查看某人的日志

    git log --pretty=oneline  //压缩后的日志每个提交只占一行

    git log --graph --oneline --decorate --all  //ASCII 艺术的树形结构来展示所有的分支, 每个分支都标示了他的名字和标签

    git log --name-status  //查看都有哪些文件修改过了

    git log --help  //更多的帮助信息
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&quot;替换本地改动&quot;&gt;替换本地改动&lt;/h3&gt;
&lt;p&gt;假如你操作失误（当然，这最好永远不要发生），你可以使用如下命令替换掉本地改动：&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-java&quot;&gt;    git checkout -- &amp;lt;filename&amp;gt; //此命令会使用 HEAD 中的最新内容替换掉你的工作目录中的文件。
    //已添加到暂存区的改动以及新文件都不会受到影响。
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;如你想丢弃你在本地的所有改动与提交，可以到服务器上获取最新的版本历史，并将你本地主分支指向它&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-java&quot;&gt;    git fetch origin
    git reset --hard origin/master
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&quot;实用小贴士&quot;&gt;实用小贴士&lt;/h3&gt;

&lt;pre&gt;&lt;code class=&quot;language-java&quot;&gt;    gitk           					//内建的图形化 git

    git config color.ui true          //彩色的 git 输出

    git config format.pretty oneline  //显示历史记录时，每个提交的信息只显示一行

    git add -i 							//交互式添加文件到暂存区：
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&quot;参考文章&quot;&gt;参考文章&lt;/h3&gt;

&lt;blockquote&gt;
  &lt;ul&gt;
    &lt;li&gt;&lt;a href=&quot;http://rogerdudler.github.io/git-guide/index.zh.html&quot;&gt;git - 简明指南&lt;/a&gt;&lt;/li&gt;
  &lt;/ul&gt;
&lt;/blockquote&gt;</content><author><name>toshiba</name></author><category term="工具" /><category term="git" /><summary type="html">git的初级使用教程</summary></entry><entry><title type="html">LeetCode,LintCode,Hihocoder刷题指南</title><link href="/%E5%B7%A5%E4%BD%9C%E9%9D%A2%E8%AF%95/2017/10/12/interview/" rel="alternate" type="text/html" title="LeetCode,LintCode,Hihocoder刷题指南" /><published>2017-10-12T00:00:00+00:00</published><updated>2017-10-12T00:00:00+00:00</updated><id>/%E5%B7%A5%E4%BD%9C%E9%9D%A2%E8%AF%95/2017/10/12/interview</id><content type="html" xml:base="/%E5%B7%A5%E4%BD%9C%E9%9D%A2%E8%AF%95/2017/10/12/interview/">&lt;h1 id=&quot;通过题目训练来提升自己的编程能力&quot;&gt;通过题目训练来提升自己的编程能力&lt;/h1&gt;

&lt;h2 id=&quot;leetcode&quot;&gt;&lt;a href=&quot;https://leetcode.com/&quot;&gt;LeetCode&lt;/a&gt;&lt;/h2&gt;

&lt;blockquote&gt;
  &lt;p&gt;LeetCode 是一个非常棒的 OJ（Online Judge）平台，收集了许多公司的面试题目。相对其他 OJ 平台而言，有着下面的几个优点：&lt;/p&gt;
  &lt;ul&gt;
    &lt;li&gt;题目全部来自业内大公司的真实面试&lt;/li&gt;
    &lt;li&gt;不用处理输入输出，精力全放在解决具体问题上&lt;/li&gt;
    &lt;li&gt;题目有丰富的讨论，可以参考别人的思路&lt;/li&gt;
    &lt;li&gt;精确了解自己代码在所有提交代码中运行效率的排名&lt;/li&gt;
    &lt;li&gt;支持多种主流语言：C/C++，Python, Java&lt;/li&gt;
    &lt;li&gt;可以在线进行测试，方便调试&lt;/li&gt;
  &lt;/ul&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;a href=&quot;http://www.lintcode.com/zh-cn/&quot;&gt;LintCode&lt;/a&gt;
&lt;a href=&quot;http://hihocoder.com/&quot;&gt;Hihocoder&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;参考文章&lt;/p&gt;

&lt;blockquote&gt;
  &lt;ul&gt;
    &lt;li&gt;&lt;a href=&quot;https://crispgm.com/page/48-tips-for-jekyll-you-should-know.html&quot;&gt;48 个你需要知道的 Jekyll 使用技巧
&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href=&quot;http://www.zhanxin.info/journal/&quot;&gt;掌心&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href=&quot;https://blog.ixxoo.me/&quot;&gt;likebeta’s Blog
&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href=&quot;http://blog.csdn.net/maoxunxing/article/details/40479753&quot;&gt;jekyll翻译文章&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href=&quot;http://ibloodline.com/articles/2014/12/15/jekyll-syntax.html&quot;&gt;jekyll语法简单笔记&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href=&quot;http://alfred-sun.github.io/blog/2014/12/05/github-pages/&quot;&gt;GitHub Pages 静态博客 - 个人建站实录
&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href=&quot;http://harttle.com/2013/10/18/github-homepage-tutorial.html&quot;&gt;部署自己的博客&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href=&quot;https://mritd.me/2017/02/25/jekyll-blog-+-travis-ci-auto-deploy/&quot;&gt;杨缘的博客参考&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href=&quot;http://yerl.cn/blog/use-jekyll-build-your-blog&quot;&gt;poison&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href=&quot;http://jekyllcn.com/docs/plugins/&quot;&gt;jekyll官网中文&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href=&quot;http://www.thomaszhao.cn/2015/01/08/how-do-i-build-this-jekyll-blog/&quot;&gt;适合程序员的Blog – 基于github pages + jekyll + markdown打造自己的blog&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href=&quot;http://www.w3cboy.com/post/2016/03/travisci-hexo-deploy/&quot;&gt;使用travis-ci自动部署hexo博客&lt;/a&gt;&lt;/li&gt;
  &lt;/ul&gt;
&lt;/blockquote&gt;</content><author><name>toshiba</name></author><category term="interview" /><category term="JavaScript" /><summary type="html">通过题目训练来提升自己的编程能力</summary></entry><entry><title type="html">使用travis-ci集成项目,自动部署博客站点</title><link href="/2017/09/05/blog-static-nginx/" rel="alternate" type="text/html" title="使用travis-ci集成项目,自动部署博客站点" /><published>2017-09-05T00:00:00+00:00</published><updated>2017-09-05T00:00:00+00:00</updated><id>/2017/09/05/blog-static-nginx</id><content type="html" xml:base="/2017/09/05/blog-static-nginx/">&lt;p&gt;categories:
    - 技术文章&lt;/p&gt;

&lt;h1 id=&quot;第一次搭建博客&quot;&gt;第一次搭建博客&lt;/h1&gt;

&lt;h1 id=&quot;参考文章&quot;&gt;参考文章&lt;/h1&gt;

&lt;p&gt;&lt;a href=&quot;https://crispgm.com/page/48-tips-for-jekyll-you-should-know.html&quot;&gt;48 个你需要知道的 Jekyll 使用技巧
&lt;/a&gt;
&lt;a href=&quot;http://www.zhanxin.info/journal/&quot;&gt;掌心&lt;/a&gt;
&lt;a href=&quot;https://blog.ixxoo.me/&quot;&gt;likebeta’s Blog
&lt;/a&gt;
&lt;a href=&quot;http://blog.csdn.net/maoxunxing/article/details/40479753&quot;&gt;jekyll翻译文章&lt;/a&gt;
&lt;a href=&quot;http://ibloodline.com/articles/2014/12/15/jekyll-syntax.html&quot;&gt;jekyll语法简单笔记&lt;/a&gt;
&lt;a href=&quot;http://alfred-sun.github.io/blog/2014/12/05/github-pages/&quot;&gt;GitHub Pages 静态博客 - 个人建站实录
&lt;/a&gt;
&lt;a href=&quot;http://harttle.com/2013/10/18/github-homepage-tutorial.html&quot;&gt;部署自己的博客&lt;/a&gt;
&lt;a href=&quot;https://mritd.me/2017/02/25/jekyll-blog-+-travis-ci-auto-deploy/&quot;&gt;杨缘的博客参考&lt;/a&gt;
&lt;a href=&quot;http://yerl.cn/blog/use-jekyll-build-your-blog&quot;&gt;poison&lt;/a&gt;
&lt;a href=&quot;http://jekyllcn.com/docs/plugins/&quot;&gt;jekyll官网中文&lt;/a&gt;
&lt;a href=&quot;http://www.w3cboy.com/post/2016/03/travisci-hexo-deploy/&quot;&gt;使用travis-ci自动部署hexo博客&lt;/a&gt;&lt;/p&gt;</content><author><name>toshiba</name></author><category term="博客搭建" /><category term="jekyll" /><category term="JavaScript" /><summary type="html">categories: - 技术文章</summary></entry><entry><title type="html">搭建jekyll 博客流程记录</title><link href="/%E6%8A%80%E6%9C%AF%E6%96%87%E7%AB%A0/2017/09/05/jekyll-site/" rel="alternate" type="text/html" title="搭建jekyll 博客流程记录" /><published>2017-09-05T00:00:00+00:00</published><updated>2017-09-05T00:00:00+00:00</updated><id>/%E6%8A%80%E6%9C%AF%E6%96%87%E7%AB%A0/2017/09/05/jekyll-site</id><content type="html" xml:base="/%E6%8A%80%E6%9C%AF%E6%96%87%E7%AB%A0/2017/09/05/jekyll-site/">&lt;h2 id=&quot;第一次搭建博客&quot;&gt;第一次搭建博客&lt;/h2&gt;

&lt;p&gt;不知为何最近突然想写个博客网站了，以前的话都是在一些博客园，新浪微博啥的浪一波时间长了也不想写了就慢慢荒废了，之所以想自己搞个一方面是把一些技术点记录一下，同时对自己也是一个督促，再就是我有个写小说的梦想想搞个栏目写写随笔等杂七杂八的东东。经过一番努力该博客终于可以勉强拿出手了。在此要感谢两位大神:&lt;/p&gt;
&lt;blockquote&gt;
  &lt;ul&gt;
    &lt;li&gt;&lt;a href=&quot;http://huangxuan.me/&quot;&gt;黄玄&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href=&quot;https://mritd.me/&quot;&gt;漠然&lt;/a&gt;&lt;/li&gt;
  &lt;/ul&gt;
&lt;/blockquote&gt;

&lt;p&gt;我的博客是基于黄玄的博客主题来更改的虽然遇到一些问题但是经过一番查找还是完美的解决了。
而漠然这位仁兄是我好兄弟对于我博客的搭建提供了各种技术支持和疑难解答对此再次表示感谢。&lt;/p&gt;

&lt;h2 id=&quot;搭建博客的基本流程&quot;&gt;搭建博客的基本流程&lt;/h2&gt;

&lt;h3 id=&quot;安装ruby-rails&quot;&gt;安装Ruby, Rails&lt;/h3&gt;
&lt;p&gt;建议在Linux的发行版本(Ubuntu,CentOs, Redhat, ArchLinux…) 或者 Mac Os X安装。&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/ruby-china/homeland/wiki/Mac-OS-X-%E4%B8%8A%E5%AE%89%E8%A3%85-Ruby&quot;&gt;Mac OS X上安装ruby&lt;/a&gt; 来安装&lt;/li&gt;
  &lt;li&gt;如果需要不同版本的ruby可以&lt;a href=&quot;https://ruby-china.org/wiki/install_ruby_guide&quot;&gt;安装 RVM&lt;/a&gt;来进行ruby版本管理&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;安装jekyll&quot;&gt;安装jekyll&lt;/h3&gt;
&lt;p&gt;该博客使用了 &lt;a href=&quot;https://jekyllrb.com/&quot;&gt;Jekyll&lt;/a&gt;, 当然好多同学可能会用 &lt;a href=&quot;https://hexo.io/themes/&quot;&gt;Hexo&lt;/a&gt; 这个就是萝卜青菜了。
如果你选择使用Jekyll请安装下面步骤安装生成:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-shell&quot;&gt;~ $ gem install jekyll bundler
~ $ jekyll new my-awesome-site
~ $ cd my-awesome-site
~/my-awesome-site $ bundle exec jekyll serve
# =&amp;gt; Now browse to http://localhost:4000

&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;生产的项目结构类似&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;.
├── _config.yml    //项目相关配置文件
├── _data
|   └── members.yml   //一些需要的数据
├── _drafts           //草稿
|   ├── begin-with-the-crazy-ideas.md
|   └── on-simplicity-in-technology.md
├── _includes         //公共的部分
|   ├── footer.html
|   └── header.html
├── _layouts           //布局文件
|   ├── default.html
|   └── post.html
├── _posts             //发布的文章
|   ├── 2007-10-29-why-every-programmer-should-play-nethack.md
|   └── 2009-04-26-barcamp-boston-4-roundup.md
├── _sass              //sass文件路径编译后生产css
|   ├── _base.scss
|   └── _layout.scss
├── _site              //所有文件编译生产静态文件都存放到这里
├── .jekyll-metadata
└── index.html # can also be an 'index.md' with valid YAML Frontmatter
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;具体还有其他目录请参考&lt;a href=&quot;https://jekyllrb.com/docs/structure/&quot;&gt;jekyll目录结构&lt;/a&gt;&lt;/p&gt;

&lt;h3 id=&quot;安装主题&quot;&gt;安装主题&lt;/h3&gt;
&lt;p&gt;到这里你应该可以访问一个页面了,但是离我们心中的博客相差甚远。我们需要给项目增加一个 &lt;a href=&quot;http://jekyllthemes.org/&quot;&gt;Jekyll 主题&lt;/a&gt; ,当然如果在套用别人主题的时候有问题可以看一下
&lt;a href=&quot;http://www.jianshu.com/p/4224b8ea0ec0&quot;&gt;Liquid语法&lt;/a&gt;,和markdown语法,因为我在套用黄玄的博客时就遇到了语法问题,可能是ruby版本更新导致。这些语法问题都可以在文档中找到答案,所以还是要仔细读文档&lt;/p&gt;

&lt;p&gt;到此博客已经能够访问并且有了主题,如果添加新的文章只需要按照固定格式套用即可。&lt;/p&gt;

&lt;p&gt;参考文章&lt;/p&gt;

&lt;blockquote&gt;
  &lt;ul&gt;
    &lt;li&gt;&lt;a href=&quot;https://crispgm.com/page/48-tips-for-jekyll-you-should-know.html&quot;&gt;48 个你需要知道的 Jekyll 使用技巧
&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href=&quot;http://www.zhanxin.info/journal/&quot;&gt;掌心&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href=&quot;https://blog.ixxoo.me/&quot;&gt;likebeta’s Blog
&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href=&quot;http://blog.csdn.net/maoxunxing/article/details/40479753&quot;&gt;jekyll翻译文章&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href=&quot;http://ibloodline.com/articles/2014/12/15/jekyll-syntax.html&quot;&gt;jekyll语法简单笔记&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href=&quot;http://alfred-sun.github.io/blog/2014/12/05/github-pages/&quot;&gt;GitHub Pages 静态博客 - 个人建站实录
&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href=&quot;http://harttle.com/2013/10/18/github-homepage-tutorial.html&quot;&gt;部署自己的博客&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href=&quot;https://mritd.me/2017/02/25/jekyll-blog-+-travis-ci-auto-deploy/&quot;&gt;杨缘的博客参考&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href=&quot;http://yerl.cn/blog/use-jekyll-build-your-blog&quot;&gt;poison&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href=&quot;http://jekyllcn.com/docs/plugins/&quot;&gt;jekyll官网中文&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href=&quot;http://www.thomaszhao.cn/2015/01/08/how-do-i-build-this-jekyll-blog/&quot;&gt;适合程序员的Blog – 基于github pages + jekyll + markdown打造自己的blog&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href=&quot;http://www.w3cboy.com/post/2016/03/travisci-hexo-deploy/&quot;&gt;使用travis-ci自动部署hexo博客&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href=&quot;http://t.hengwei.me/post/%E4%B8%BAjekyll%E5%8D%9A%E5%AE%A2%E6%B7%BB%E5%8A%A0%E7%9B%AE%E5%BD%95%E4%B8%8Escrollspy%E6%95%88%E6%9E%9C.html&quot;&gt;为Jekyll博客添加目录与ScrollSpy效果&lt;/a&gt;&lt;/li&gt;
  &lt;/ul&gt;
&lt;/blockquote&gt;</content><author><name>toshiba</name></author><category term="博客搭建" /><category term="JavaScript" /><summary type="html">第一次搭建博客</summary></entry></feed>