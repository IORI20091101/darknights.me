<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="http://jekyllrb.com" version="3.4.2">Jekyll</generator><link href="/feed.xml" rel="self" type="application/atom+xml" /><link href="/" rel="alternate" type="text/html" /><updated>2017-11-02T04:19:41+00:00</updated><id>/</id><subtitle>Dark knight's的个人技术博客,专注于web开发,追求前端最完美体验</subtitle><entry><title type="html">git的使用教程(二)</title><link href="/%E6%8A%80%E6%9C%AF%E6%96%87%E7%AB%A0/2017/11/02/git-medium/" rel="alternate" type="text/html" title="git的使用教程(二)" /><published>2017-11-02T00:00:00+00:00</published><updated>2017-11-02T00:00:00+00:00</updated><id>/%E6%8A%80%E6%9C%AF%E6%96%87%E7%AB%A0/2017/11/02/git-medium</id><content type="html" xml:base="/%E6%8A%80%E6%9C%AF%E6%96%87%E7%AB%A0/2017/11/02/git-medium/">&lt;h2 id=&quot;git的中级使用教程&quot;&gt;git的中级使用教程&lt;/h2&gt;

&lt;p&gt;记录常用的git命令&lt;/p&gt;

&lt;p&gt;#&lt;/p&gt;
&lt;h3 id=&quot;参考文章&quot;&gt;参考文章&lt;/h3&gt;

&lt;blockquote&gt;
  &lt;ul&gt;
    &lt;li&gt;&lt;a href=&quot;http://rogerdudler.github.io/git-guide/index.zh.html&quot;&gt;git - 简明指南&lt;/a&gt;&lt;/li&gt;
  &lt;/ul&gt;
&lt;/blockquote&gt;</content><author><name>toshiba</name></author><category term="工具" /><category term="git" /><summary type="html">git的中级使用教程</summary></entry><entry><title type="html">javascript的位操作</title><link href="/%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/2017/11/01/bin-operate/" rel="alternate" type="text/html" title="javascript的位操作" /><published>2017-11-01T00:00:00+00:00</published><updated>2017-11-01T00:00:00+00:00</updated><id>/%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/2017/11/01/bin-operate</id><content type="html" xml:base="/%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/2017/11/01/bin-operate/">&lt;h1 id=&quot;关于javascript中的操作&quot;&gt;关于javascript中的~操作&lt;/h1&gt;

&lt;p&gt;参考文章中有一道面试题,尽管文章已经有了一部分解释但是还有一些点不够明确在此在进行一次分析&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;!~location.href.search(‘abc’)&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;首先再次回顾一下js中的位运算&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&amp;amp; 与&lt;/li&gt;
  &lt;li&gt;| 或&lt;/li&gt;
  &lt;li&gt;~ 非&lt;/li&gt;
  &lt;li&gt;^ 异或&lt;/li&gt;
  &lt;li&gt;&amp;lt;&amp;lt; 左移&lt;/li&gt;
  &lt;li&gt;&amp;gt;&amp;gt; 算数右移(有符号右移)&lt;/li&gt;
  &lt;li&gt;&amp;gt;&amp;gt;&amp;gt; 逻辑右移(无符号右移)&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Number.prototype.toString&lt;/p&gt;

&lt;p&gt;Number.prototype.toString方法可以讲数字转化为字符串，有一个可选的参数，用来决定将数字显示为指定的进制，下面可以查看3的二进制表示&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-`&quot;&gt; 3..toString(2)

 (3).toString(2)

 Number(3).toString(2)   //这里如果直接 3.toString(2)是会报错的

  &amp;gt;&amp;gt; 11
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&quot;-与&quot;&gt;&amp;amp; 与&lt;/h2&gt;

&lt;blockquote&gt;
  &lt;p&gt;&amp;amp;按位与会将操作数和被操作数的相同为进行与运算，如果都为1则为1，如果有一个为0则为0&lt;/p&gt;
&lt;/blockquote&gt;

&lt;pre&gt;&lt;code&gt;101
011
---
001
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&quot;-或&quot;&gt;| 或&lt;/h2&gt;

&lt;blockquote&gt;
  &lt;p&gt;按位或是相同的位置上只要有一个为1就是1，两个都为0则为0&lt;/p&gt;
&lt;/blockquote&gt;

&lt;pre&gt;&lt;code&gt;101
001
---
101
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&quot;-非&quot;&gt;~ 非&lt;/h2&gt;

&lt;blockquote&gt;
  &lt;p&gt;~操作符会将操作数的每一位取反，如果是1则变为0，如果是0则边为1&lt;/p&gt;
&lt;/blockquote&gt;

&lt;pre&gt;&lt;code&gt;101
---
010
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&quot;-异或&quot;&gt;^ 异或&lt;/h2&gt;

&lt;blockquote&gt;
  &lt;p&gt;再来说说异或，这个比较有意思，异或顾名思义看看两个位是否为异——不同，两个位不同则为1，两个位相同则为0&lt;/p&gt;
&lt;/blockquote&gt;

&lt;pre&gt;&lt;code&gt;101
001
---
100
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;再次分析开头的问题&lt;/p&gt;

&lt;p&gt;首先关于indexOf获得的值可能有几种请求 -1,0,1 从这三种进行分析&lt;/p&gt;

&lt;h2 id=&quot;-1&quot;&gt;~-1&lt;/h2&gt;

&lt;p&gt;为了简便计算我这只取8位&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;10000001  //这是-1的原码 (真值的绝对值加上符号位)
--------  //进行按位非操作后 这里会改变符号
01111110  //得到此值为正值要获得该值得真值需要然后取反再减一 注意取反的操作不会改变符号
--------
00000000  //最后得到的值是0

//浏览器控制台输出

~-1
0

&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&quot;0&quot;&gt;~0&lt;/h2&gt;

&lt;pre&gt;&lt;code&gt;00000000  //这是0的原码 (真值的绝对值加上符号位)
--------  //进行按位非操作后 这里会改变符号
11111111  //得到此值该值为负值的补码 要获得该值得真值需要对补码求补即取反+1 (注意取反的操作不会改变符号)
--------
10000001  //最后得到的值是1

//浏览器控制台输出

~0
-1

&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&quot;1&quot;&gt;~1&lt;/h2&gt;

&lt;pre&gt;&lt;code&gt;00000001  //这是1的原码 (真值的绝对值加上符号位)
--------  //进行按位非操作后 这里会改变符号
11111110  //得到此值该值为负值的补码 要获得该值得真值需要对补码求补即取反+1 (注意取反的操作不会改变符号)
--------
10000010  //最后得到的值是2

//浏览器控制台输出

~1
-2

&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;因此在上面问题出现的时候&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;~location.href.search('abc')  //未匹配到返回 -1 这里为 ~-1  == 0 ==&amp;gt; !0 == true;
~location.href.search('abc')  //未匹配到返回 0 这里为 ~0  == -1 ==&amp;gt; !-1 == false;
~location.href.search('abc')  //未匹配到返回 1 这里为 ~1  == -2 ==&amp;gt; !-2== false;

&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;因此只有返回 -1时&lt;/p&gt;

&lt;p&gt;如果为 -1 说明未匹配到&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;!~location.href.search(‘abc’) ===&amp;gt; true&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;得证。&lt;/p&gt;

&lt;h1 id=&quot;文章参考&quot;&gt;文章参考&lt;/h1&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;http://yanhaijing.com/javascript/2016/07/20/binary-in-js/&quot;&gt;聊聊JavaScript中的二进制数&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.cnblogs.com/zhangziqiu/archive/2011/03/30/ComputerCode.html&quot;&gt;原码, 反码, 补码 详解&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&quot;延伸阅读&quot;&gt;延伸阅读&lt;/h1&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;http://yanhaijing.com/javascript/2014/03/14/what-every-javascript-developer-should-know-about-floating-points/&quot;&gt;每一个JavaScript开发者应该了解的浮点知识&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://jser.it/blog/2014/07/07/numbers-in-javascript/&quot;&gt;Numbers in JavaScript&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</content><author><name>toshiba</name></author><category term="计算机基础" /><category term="javascript" /><summary type="html">关于javascript中的~操作</summary></entry><entry><title type="html">常用快捷键整理总结</title><link href="/%E6%8A%80%E6%9C%AF%E6%96%87%E7%AB%A0/2017/10/31/quick-key/" rel="alternate" type="text/html" title="常用快捷键整理总结" /><published>2017-10-31T00:00:00+00:00</published><updated>2017-10-31T00:00:00+00:00</updated><id>/%E6%8A%80%E6%9C%AF%E6%96%87%E7%AB%A0/2017/10/31/quick-key</id><content type="html" xml:base="/%E6%8A%80%E6%9C%AF%E6%96%87%E7%AB%A0/2017/10/31/quick-key/">&lt;h1 id=&quot;工欲善其事必先利其器快捷键总结&quot;&gt;工欲善其事必先利其器快捷键总结&lt;/h1&gt;</content><author><name>toshiba</name></author><category term="生产工具" /><category term="IDE" /><summary type="html">工欲善其事必先利其器快捷键总结</summary></entry><entry><title type="html">原码, 反码, 补码 详解</title><link href="/%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/2017/10/31/bin-calculate/" rel="alternate" type="text/html" title="原码, 反码, 补码 详解" /><published>2017-10-31T00:00:00+00:00</published><updated>2017-10-31T00:00:00+00:00</updated><id>/%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/2017/10/31/bin-calculate</id><content type="html" xml:base="/%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/2017/10/31/bin-calculate/">&lt;h1 id=&quot;机器数和真值&quot;&gt;机器数和真值&lt;/h1&gt;
&lt;p&gt;在学习原码, 反码和补码之前, 需要先了解机器数和真值的概念.&lt;/p&gt;

&lt;h2 id=&quot;机器数&quot;&gt;机器数&lt;/h2&gt;
&lt;p&gt;一个数在计算机中的二进制表示形式,  叫做这个数的机器数。机器数是带符号的，在计算机用一个数的最高位存放符号, 正数为0, 负数为1.&lt;/p&gt;

&lt;p&gt;比如，十进制中的数 +3 ，计算机字长为8位，转换成二进制就是00000011。如果是 -3 ，就是 10000011 。&lt;/p&gt;

&lt;p&gt;那么，这里的 00000011 和 10000011 就是机器数。&lt;/p&gt;

&lt;h2 id=&quot;真值&quot;&gt;真值&lt;/h2&gt;

&lt;blockquote&gt;
  &lt;p&gt;因为第一位是符号位，所以机器数的形式值就不等于真正的数值。例如上面的有符号数 10000011，其最高位1代表负，其真正数值是 -3 而不是形式值131?&amp;gt;（10000011转换成十进制等于131）。所以，为区别起见，将带符号位的机器数对应的真正数值称为机器数的真值。
例：0000 0001的真值 = +000 0001 = +1，1000 0001的真值 = –000 0001 = –1&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h1 id=&quot;原码-反码-补码的基础概念和计算方法&quot;&gt;原码, 反码, 补码的基础概念和计算方法&lt;/h1&gt;

&lt;p&gt;在探求为何机器要使用补码之前, 让我们先了解原码, 反码和补码的概念.对于一个数, 计算机要使用一定的编码方式进行存储. 原码, 反码, 补码是机器存储一个具体数字的编码方式.&lt;/p&gt;

&lt;h2 id=&quot;原码&quot;&gt;原码&lt;/h2&gt;

&lt;p&gt;原码就是符号位加上真值的绝对值, 即用第一位表示符号, 其余位表示值. 比如如果是8位二进制:&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;[+1]原 = 0000 0001&lt;/p&gt;
&lt;/blockquote&gt;

&lt;blockquote&gt;
  &lt;p&gt;[-1]原 = 1000 0001&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;第一位是符号位. 因为第一位是符号位, 所以8位二进制数的取值范围就是:&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;[1111 1111 , 0111 1111] 即 [-127 , 127]&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;原码是人脑最容易理解和计算的表示方式.&lt;/p&gt;

&lt;h2 id=&quot;反码&quot;&gt;反码&lt;/h2&gt;

&lt;p&gt;反码的表示方法是:&lt;/p&gt;

&lt;p&gt;正数的反码是其本身&lt;/p&gt;

&lt;p&gt;负数的反码是在其原码的基础上, 符号位不变，其余各个位取反.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;[+1] = [00000001]原 = [00000001]反&lt;/p&gt;
&lt;/blockquote&gt;

&lt;blockquote&gt;
  &lt;p&gt;[-1] = [10000001]原 = [11111110]反&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;可见如果一个反码表示的是负数, 人脑无法直观的看出来它的数值. 通常要将其转换成原码再计算.&lt;/p&gt;

&lt;h2 id=&quot;补码&quot;&gt;补码&lt;/h2&gt;

&lt;p&gt;补码的表示方法是:&lt;/p&gt;

&lt;p&gt;正数的补码就是其本身&lt;/p&gt;

&lt;p&gt;负数的补码是在其原码的基础上, 符号位不变, 其余各位取反, 最后+1. (即在反码的基础上+1)&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;[+1] = [00000001]原 = [00000001]反 = [00000001]补&lt;/p&gt;
&lt;/blockquote&gt;

&lt;blockquote&gt;
  &lt;p&gt;[-1] = [10000001]原 = [11111110]反 = [11111111]补&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;对于负数, 补码表示方式也是人脑无法直观看出其数值的. 通常也需要转换成原码在计算其数值.&lt;/p&gt;

&lt;h1 id=&quot;为何要使用原码-反码和补码&quot;&gt;为何要使用原码, 反码和补码&lt;/h1&gt;

&lt;p&gt;在开始深入学习前, 我的学习建议是先”死记硬背”上面的原码, 反码和补码的表示方式以及计算方法.&lt;/p&gt;

&lt;p&gt;现在我们知道了计算机可以有三种编码方式表示一个数. 对于正数因为三种编码方式的结果都相同:&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;[+1] = [00000001]原 = [00000001]反 = [00000001]补&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;所以不需要过多解释. 但是对于负数:&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;[-1] = [10000001]原 = [11111110]反 = [11111111]补&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;可见原码, 反码和补码是完全不同的. 既然原码才是被人脑直接识别并用于计算表示方式, 为何还会有反码和补码呢?&lt;/p&gt;

&lt;p&gt;首先, 因为人脑可以知道第一位是符号位, 在计算的时候我们会根据符号位, 选择对真值区域的加减. (真值的概念在本文最开头). 但是对于计算机, 加减乘数已经是最基础的运算, 要设计的尽量简单. 计算机辨别”符号位”显然会让计算机的基础电路设计变得十分复杂! 于是人们想出了将符号位也参与运算的方法. 我们知道, 根据运算法则减去一个正数等于加上一个负数, 即: 1-1 = 1 + (-1) = 0 , 所以机器可以只有加法而没有减法, 这样计算机运算的设计就更简单了.&lt;/p&gt;

&lt;p&gt;于是人们开始探索 将符号位参与运算, 并且只保留加法的方法. 首先来看原码:&lt;/p&gt;

&lt;p&gt;计算十进制的表达式: 1-1=0&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;1 - 1 = 1 + (-1) = [00000001]原 + [10000001]原 = [10000010]原 = -2&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;如果用原码表示, 让符号位也参与计算, 显然对于减法来说, 结果是不正确的.这也就是为何计算机内部不使用原码表示一个数.&lt;/p&gt;

&lt;p&gt;为了解决原码做减法的问题, 出现了反码:&lt;/p&gt;

&lt;p&gt;计算十进制的表达式: 1-1=0&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;1 - 1 = 1 + (-1) = [0000 0001]原 + [1000 0001]原= [0000 0001]反 + [1111 1110]反 = [1111 1111]反 = [1000 0000]原 = -0&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;发现用反码计算减法, 结果的真值部分是正确的. 而唯一的问题其实就出现在”0”这个特殊的数值上. 虽然人们理解上+0和-0是一样的, 但是0带符号是没有任何意义的. 而且会有[0000 0000]原和[1000 0000]原两个编码表示0.&lt;/p&gt;

&lt;p&gt;于是补码的出现, 解决了0的符号以及两个编码的问题:&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;1-1 = 1 + (-1) = [0000 0001]原 + [1000 0001]原 = [0000 0001]补 + [1111 1111]补 = [0000 0000]补=[0000 0000]原&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;这样0用[0000 0000]表示, 而以前出现问题的-0则不存在了.而且可以用[1000 0000]表示-128:&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;(-1) + (-127) = [1000 0001]原 + [1111 1111]原 = [1111 1111]补 + [1000 0001]补 = [1000 0000]补&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;-1-127的结果应该是-128, 在用补码运算的结果中, [1000 0000]补 就是-128. 但是注意因为实际上是使用以前的-0的补码来表示-128, 所以-128并没有原码和反码表示.(对-128的补码表示[1000 0000]补算出来的原码是[0000 0000]原, 这是不正确的)&lt;/p&gt;

&lt;p&gt;使用补码, 不仅仅修复了0的符号以及存在两个编码的问题, 而且还能够多表示一个最低数. 这就是为什么8位二进制, 使用原码或反码表示的范围为[-127, +127], 而使用补码表示的范围为[-128, 127].&lt;/p&gt;

&lt;p&gt;因为机器使用补码, 所以对于编程中常用到的32位int类型, 可以表示范围是: [-231, 231-1] 因为第一位表示的是符号位.而使用补码表示时又可以多保存一个最小值.&lt;/p&gt;

&lt;h1 id=&quot;文章参考&quot;&gt;文章参考&lt;/h1&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;http://yanhaijing.com/javascript/2016/07/20/binary-in-js/&quot;&gt;聊聊JavaScript中的二进制数&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.cnblogs.com/zhangziqiu/archive/2011/03/30/ComputerCode.html&quot;&gt;原码, 反码, 补码 详解&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&quot;延伸阅读&quot;&gt;延伸阅读&lt;/h1&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;http://yanhaijing.com/javascript/2014/03/14/what-every-javascript-developer-should-know-about-floating-points/&quot;&gt;每一个JavaScript开发者应该了解的浮点知识&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</content><author><name>toshiba</name></author><category term="基础知识" /><summary type="html">机器数和真值 在学习原码, 反码和补码之前, 需要先了解机器数和真值的概念.</summary></entry><entry><title type="html">常用的后台管理主题模板</title><link href="/%E6%8A%80%E6%9C%AF%E6%96%87%E7%AB%A0/2017/10/31/admin-theme/" rel="alternate" type="text/html" title="常用的后台管理主题模板" /><published>2017-10-31T00:00:00+00:00</published><updated>2017-10-31T00:00:00+00:00</updated><id>/%E6%8A%80%E6%9C%AF%E6%96%87%E7%AB%A0/2017/10/31/admin-theme</id><content type="html" xml:base="/%E6%8A%80%E6%9C%AF%E6%96%87%E7%AB%A0/2017/10/31/admin-theme/">&lt;h2 id=&quot;常用后台管理主题推荐&quot;&gt;常用后台管理主题推荐&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;jQuey: &lt;a href=&quot;http://www.bootcss.com/&quot;&gt;Bootstrap&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;React: &lt;a href=&quot;https://ant.design/index-cn&quot;&gt;ant.design&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;Vue: &lt;a href=&quot;http://element.eleme.io/#/zh-CN/component/layout&quot;&gt;Element&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;个人感觉基于bootstrap的管理模板都大同小异参考文章中的内容基本可以满足需求推荐以下免费主题供大家参考&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://thetheme.io/theadmin/&quot;&gt;thetheme.io&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://flatfull.com/themes/flatkit/angular/#/app/dashboard&quot;&gt;flatfull.com&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://wrappixel.com/demos/free-admin-templates/matrix-admin/index.html&quot;&gt;matrix-admin&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://demo.thedevelovers.com/dashboard/klorofil-v2.0/icons.html&quot;&gt;KLOROFIL&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://adminlte.io/themes/AdminLTE/pages/UI/sliders.html&quot;&gt;adminlte.io&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://wrappixel.com/demos/admin-templates/pixeladmin/inverse/index.html&quot;&gt;pixeladmin&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://akveo.com/blur-admin-mint/#/tables/basic&quot;&gt;akveo 这个挺快&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://akveo.com/ngx-admin/#/pages/dashboard&quot;&gt;ngx-admin&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;参考文章&lt;/p&gt;

&lt;blockquote&gt;
  &lt;ul&gt;
    &lt;li&gt;&lt;a href=&quot;https://colorlib.com/wp/free-bootstrap-admin-dashboard-templates/&quot;&gt;20 Free Bootstrap 3 Admin Dashboard Templates For Your Web App 2017&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href=&quot;https://elements.envato.com/web-templates/admin-templates&quot;&gt;admin templates&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href=&quot;https://athemes.com/collections/free-bootstrap-admin-templates/&quot;&gt;20 Best Free Bootstrap Admin Templates 2017&lt;/a&gt;
&lt;a href=&quot;https://cssauthor.com/bootstrap-admin-templates/&quot;&gt;100+ Best Free Bootstrap Admin Templates&lt;/a&gt;&lt;/li&gt;
  &lt;/ul&gt;
&lt;/blockquote&gt;</content><author><name>toshiba</name></author><category term="html" /><category term="管理系统主题" /><summary type="html">常用后台管理主题推荐</summary></entry><entry><title type="html">娱乐</title><link href="/%E5%A8%B1%E4%B9%90/2017/10/29/entertainment/" rel="alternate" type="text/html" title="娱乐" /><published>2017-10-29T00:00:00+00:00</published><updated>2017-10-29T00:00:00+00:00</updated><id>/%E5%A8%B1%E4%B9%90/2017/10/29/entertainment</id><content type="html" xml:base="/%E5%A8%B1%E4%B9%90/2017/10/29/entertainment/">&lt;h2 id=&quot;justfun&quot;&gt;justfun&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://wall.alphacoders.com/by_collection.php?id=39&amp;amp;lang=Chinese&amp;amp;page=1&quot;&gt;壁纸&lt;/a&gt;&lt;/p&gt;</content><author><name>toshiba</name></author><category term="娱乐" /><summary type="html">justfun</summary></entry><entry><title type="html">git的使用教程(一)</title><link href="/%E6%8A%80%E6%9C%AF%E6%96%87%E7%AB%A0/2017/10/12/git-base/" rel="alternate" type="text/html" title="git的使用教程(一)" /><published>2017-10-12T00:00:00+00:00</published><updated>2017-10-12T00:00:00+00:00</updated><id>/%E6%8A%80%E6%9C%AF%E6%96%87%E7%AB%A0/2017/10/12/git-base</id><content type="html" xml:base="/%E6%8A%80%E6%9C%AF%E6%96%87%E7%AB%A0/2017/10/12/git-base/">&lt;h2 id=&quot;git的初级使用教程&quot;&gt;git的初级使用教程&lt;/h2&gt;

&lt;p&gt;记录常用的git命令,方便自己查询&lt;/p&gt;

&lt;h2 id=&quot;创建新仓库&quot;&gt;创建新仓库&lt;/h2&gt;
&lt;pre&gt;&lt;code class=&quot;language-java&quot;&gt;    git init
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;##检出新仓库&lt;/p&gt;
&lt;h3 id=&quot;clone本地仓库&quot;&gt;clone本地仓库&lt;/h3&gt;
&lt;pre&gt;&lt;code class=&quot;language-java&quot;&gt;    git clone /path/to/repository
&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id=&quot;从远程仓库clone&quot;&gt;从远程仓库clone&lt;/h3&gt;
&lt;pre&gt;&lt;code class=&quot;language-java&quot;&gt;    git clone username@host:/path/to/repository
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&quot;工作流&quot;&gt;工作流&lt;/h3&gt;
&lt;blockquote&gt;
  &lt;p&gt;你的本地仓库由 git 维护的三棵“树”组成。第一个是你的 工作目录，它持有实际文件；第二个是 暂存区（Index），它像个缓存区域，临时保存你的改动；最后是 HEAD，它指向你最后一次提交的结果。&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;img src=&quot;https://darknights.b0.upaiyun.com/assets/images/in-post/git-base/trees.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;h3 id=&quot;添加和提交&quot;&gt;添加和提交&lt;/h3&gt;
&lt;pre&gt;&lt;code class=&quot;language-java&quot;&gt;    git add &amp;lt;filename&amp;gt;
    git add *
    git add .     //添加到缓存区

    git commit -m &quot;代码提交信息&quot;   //提交到本地仓库
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&quot;推送改动&quot;&gt;推送改动&lt;/h3&gt;
&lt;p&gt;你的改动现在已经在本地仓库的 HEAD 中了。执行如下命令以将这些改动提交到远端仓库：&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-java&quot;&gt;    git push origin master
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;可以把 master 换成你想要推送的任何分支。&lt;/p&gt;

&lt;p&gt;如果你还没有克隆现有仓库，并欲将你的仓库连接到某个远程服务器，你可以使用如下命令添加：&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-java&quot;&gt;    git remote add origin &amp;lt;server&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;如此你就能够将你的改动推送到所添加的服务器上去了。&lt;/p&gt;

&lt;h3 id=&quot;分支&quot;&gt;分支&lt;/h3&gt;
&lt;p&gt;分支是用来将特性开发绝缘开来的。在你创建仓库的时候，master 是“默认的”分支。在其他分支上进行开发，完成后再将它们合并到主分支上。
&lt;img src=&quot;https://darknights.b0.upaiyun.com/assets/images/in-post/git-base/branches.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;创建一个叫做“feature_x”的分支，并切换过去：&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-java&quot;&gt;    git checkout -b feature_x
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;切换回主分支：&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-java&quot;&gt;    git checkout master
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;再把新建的分支删掉：&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-java&quot;&gt;    git branch -d feature_x
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;除非你将分支推送到远端仓库，不然该分支就是 不为他人所见的：&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-java&quot;&gt;    git push origin &amp;lt;branch&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&quot;更新与合并&quot;&gt;更新与合并&lt;/h3&gt;

&lt;pre&gt;&lt;code class=&quot;language-java&quot;&gt;    git pull   //相当于 git fetch and git merge两个操作
    git diff &amp;lt;source_branch&amp;gt; &amp;lt;target_branch&amp;gt;  //如果有冲突解决完冲突可以这样查看两个分支差别
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&quot;标签&quot;&gt;标签&lt;/h3&gt;
&lt;p&gt;以执行如下命令创建一个叫做 1.0.0 的标签：&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-java&quot;&gt;    git	 tag 1.0.0 1b2e1d63ff //b2e1d63ff 是你想要标记的提交 ID 的前 10 位字符
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&quot;log&quot;&gt;log&lt;/h3&gt;

&lt;pre&gt;&lt;code class=&quot;language-java&quot;&gt;    git log //查看所有日志

    git log --author=toshiba  //查看某人的日志

    git log --pretty=oneline  //压缩后的日志每个提交只占一行

    git log --graph --oneline --decorate --all  //ASCII 艺术的树形结构来展示所有的分支, 每个分支都标示了他的名字和标签

    git log --name-status  //查看都有哪些文件修改过了

    git log --help  //更多的帮助信息
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&quot;替换本地改动&quot;&gt;替换本地改动&lt;/h3&gt;
&lt;p&gt;假如你操作失误（当然，这最好永远不要发生），你可以使用如下命令替换掉本地改动：&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-java&quot;&gt;    git checkout -- &amp;lt;filename&amp;gt; //此命令会使用 HEAD 中的最新内容替换掉你的工作目录中的文件。
    //已添加到暂存区的改动以及新文件都不会受到影响。
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;如你想丢弃你在本地的所有改动与提交，可以到服务器上获取最新的版本历史，并将你本地主分支指向它&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-java&quot;&gt;    git fetch origin
    git reset --hard origin/master
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&quot;实用小贴士&quot;&gt;实用小贴士&lt;/h3&gt;

&lt;pre&gt;&lt;code class=&quot;language-java&quot;&gt;    gitk           					//内建的图形化 git

    git config color.ui true          //彩色的 git 输出

    git config format.pretty oneline  //显示历史记录时，每个提交的信息只显示一行

    git add -i 							//交互式添加文件到暂存区：
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&quot;参考文章&quot;&gt;参考文章&lt;/h3&gt;

&lt;blockquote&gt;
  &lt;ul&gt;
    &lt;li&gt;&lt;a href=&quot;http://rogerdudler.github.io/git-guide/index.zh.html&quot;&gt;git - 简明指南&lt;/a&gt;&lt;/li&gt;
  &lt;/ul&gt;
&lt;/blockquote&gt;</content><author><name>toshiba</name></author><category term="工具" /><category term="git" /><summary type="html">git的初级使用教程</summary></entry><entry><title type="html">LeetCode,LintCode,Hihocoder刷题指南</title><link href="/%E5%B7%A5%E4%BD%9C%E9%9D%A2%E8%AF%95/2017/10/12/interview/" rel="alternate" type="text/html" title="LeetCode,LintCode,Hihocoder刷题指南" /><published>2017-10-12T00:00:00+00:00</published><updated>2017-10-12T00:00:00+00:00</updated><id>/%E5%B7%A5%E4%BD%9C%E9%9D%A2%E8%AF%95/2017/10/12/interview</id><content type="html" xml:base="/%E5%B7%A5%E4%BD%9C%E9%9D%A2%E8%AF%95/2017/10/12/interview/">&lt;h1 id=&quot;通过题目训练来提升自己的编程能力&quot;&gt;通过题目训练来提升自己的编程能力&lt;/h1&gt;

&lt;h2 id=&quot;leetcode&quot;&gt;&lt;a href=&quot;https://leetcode.com/&quot;&gt;LeetCode&lt;/a&gt;&lt;/h2&gt;

&lt;blockquote&gt;
  &lt;p&gt;LeetCode 是一个非常棒的 OJ（Online Judge）平台，收集了许多公司的面试题目。相对其他 OJ 平台而言，有着下面的几个优点：&lt;/p&gt;
  &lt;ul&gt;
    &lt;li&gt;题目全部来自业内大公司的真实面试&lt;/li&gt;
    &lt;li&gt;不用处理输入输出，精力全放在解决具体问题上&lt;/li&gt;
    &lt;li&gt;题目有丰富的讨论，可以参考别人的思路&lt;/li&gt;
    &lt;li&gt;精确了解自己代码在所有提交代码中运行效率的排名&lt;/li&gt;
    &lt;li&gt;支持多种主流语言：C/C++，Python, Java&lt;/li&gt;
    &lt;li&gt;可以在线进行测试，方便调试&lt;/li&gt;
  &lt;/ul&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;a href=&quot;http://www.lintcode.com/zh-cn/&quot;&gt;LintCode&lt;/a&gt;
&lt;a href=&quot;http://hihocoder.com/&quot;&gt;Hihocoder&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;参考文章&lt;/p&gt;

&lt;blockquote&gt;
  &lt;ul&gt;
    &lt;li&gt;&lt;a href=&quot;https://crispgm.com/page/48-tips-for-jekyll-you-should-know.html&quot;&gt;48 个你需要知道的 Jekyll 使用技巧
&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href=&quot;http://www.zhanxin.info/journal/&quot;&gt;掌心&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href=&quot;https://blog.ixxoo.me/&quot;&gt;likebeta’s Blog
&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href=&quot;http://blog.csdn.net/maoxunxing/article/details/40479753&quot;&gt;jekyll翻译文章&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href=&quot;http://ibloodline.com/articles/2014/12/15/jekyll-syntax.html&quot;&gt;jekyll语法简单笔记&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href=&quot;http://alfred-sun.github.io/blog/2014/12/05/github-pages/&quot;&gt;GitHub Pages 静态博客 - 个人建站实录
&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href=&quot;http://harttle.com/2013/10/18/github-homepage-tutorial.html&quot;&gt;部署自己的博客&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href=&quot;https://mritd.me/2017/02/25/jekyll-blog-+-travis-ci-auto-deploy/&quot;&gt;杨缘的博客参考&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href=&quot;http://yerl.cn/blog/use-jekyll-build-your-blog&quot;&gt;poison&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href=&quot;http://jekyllcn.com/docs/plugins/&quot;&gt;jekyll官网中文&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href=&quot;http://www.thomaszhao.cn/2015/01/08/how-do-i-build-this-jekyll-blog/&quot;&gt;适合程序员的Blog – 基于github pages + jekyll + markdown打造自己的blog&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href=&quot;http://www.w3cboy.com/post/2016/03/travisci-hexo-deploy/&quot;&gt;使用travis-ci自动部署hexo博客&lt;/a&gt;&lt;/li&gt;
  &lt;/ul&gt;
&lt;/blockquote&gt;</content><author><name>toshiba</name></author><category term="interview" /><category term="JavaScript" /><summary type="html">通过题目训练来提升自己的编程能力</summary></entry><entry><title type="html">使用travis-ci集成项目,自动部署博客站点</title><link href="/2017/09/05/blog-static-nginx/" rel="alternate" type="text/html" title="使用travis-ci集成项目,自动部署博客站点" /><published>2017-09-05T00:00:00+00:00</published><updated>2017-09-05T00:00:00+00:00</updated><id>/2017/09/05/blog-static-nginx</id><content type="html" xml:base="/2017/09/05/blog-static-nginx/">&lt;p&gt;categories:
    - 技术文章&lt;/p&gt;

&lt;h1 id=&quot;第一次搭建博客&quot;&gt;第一次搭建博客&lt;/h1&gt;

&lt;h1 id=&quot;参考文章&quot;&gt;参考文章&lt;/h1&gt;

&lt;p&gt;&lt;a href=&quot;https://crispgm.com/page/48-tips-for-jekyll-you-should-know.html&quot;&gt;48 个你需要知道的 Jekyll 使用技巧
&lt;/a&gt;
&lt;a href=&quot;http://www.zhanxin.info/journal/&quot;&gt;掌心&lt;/a&gt;
&lt;a href=&quot;https://blog.ixxoo.me/&quot;&gt;likebeta’s Blog
&lt;/a&gt;
&lt;a href=&quot;http://blog.csdn.net/maoxunxing/article/details/40479753&quot;&gt;jekyll翻译文章&lt;/a&gt;
&lt;a href=&quot;http://ibloodline.com/articles/2014/12/15/jekyll-syntax.html&quot;&gt;jekyll语法简单笔记&lt;/a&gt;
&lt;a href=&quot;http://alfred-sun.github.io/blog/2014/12/05/github-pages/&quot;&gt;GitHub Pages 静态博客 - 个人建站实录
&lt;/a&gt;
&lt;a href=&quot;http://harttle.com/2013/10/18/github-homepage-tutorial.html&quot;&gt;部署自己的博客&lt;/a&gt;
&lt;a href=&quot;https://mritd.me/2017/02/25/jekyll-blog-+-travis-ci-auto-deploy/&quot;&gt;杨缘的博客参考&lt;/a&gt;
&lt;a href=&quot;http://yerl.cn/blog/use-jekyll-build-your-blog&quot;&gt;poison&lt;/a&gt;
&lt;a href=&quot;http://jekyllcn.com/docs/plugins/&quot;&gt;jekyll官网中文&lt;/a&gt;
&lt;a href=&quot;http://www.w3cboy.com/post/2016/03/travisci-hexo-deploy/&quot;&gt;使用travis-ci自动部署hexo博客&lt;/a&gt;&lt;/p&gt;</content><author><name>toshiba</name></author><category term="博客搭建" /><category term="jekyll" /><summary type="html">categories: - 技术文章</summary></entry><entry><title type="html">搭建jekyll 博客流程记录</title><link href="/%E6%8A%80%E6%9C%AF%E6%96%87%E7%AB%A0/2017/09/05/jekyll-site/" rel="alternate" type="text/html" title="搭建jekyll 博客流程记录" /><published>2017-09-05T00:00:00+00:00</published><updated>2017-09-05T00:00:00+00:00</updated><id>/%E6%8A%80%E6%9C%AF%E6%96%87%E7%AB%A0/2017/09/05/jekyll-site</id><content type="html" xml:base="/%E6%8A%80%E6%9C%AF%E6%96%87%E7%AB%A0/2017/09/05/jekyll-site/">&lt;h2 id=&quot;第一次搭建博客&quot;&gt;第一次搭建博客&lt;/h2&gt;

&lt;p&gt;不知为何最近突然想写个博客网站了，以前的话都是在一些博客园，新浪微博啥的浪一波时间长了也不想写了就慢慢荒废了，之所以想自己搞个一方面是把一些技术点记录一下，同时对自己也是一个督促，再就是我有个写小说的梦想想搞个栏目写写随笔等杂七杂八的东东。经过一番努力该博客终于可以勉强拿出手了。在此要感谢两位大神:&lt;/p&gt;
&lt;blockquote&gt;
  &lt;ul&gt;
    &lt;li&gt;&lt;a href=&quot;http://huangxuan.me/&quot;&gt;黄玄&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href=&quot;https://mritd.me/&quot;&gt;漠然&lt;/a&gt;&lt;/li&gt;
  &lt;/ul&gt;
&lt;/blockquote&gt;

&lt;p&gt;我的博客是基于黄玄的博客主题来更改的虽然遇到一些问题但是经过一番查找还是完美的解决了。
而漠然这位仁兄是我好兄弟对于我博客的搭建提供了各种技术支持和疑难解答对此再次表示感谢。&lt;/p&gt;

&lt;h2 id=&quot;搭建博客的基本流程&quot;&gt;搭建博客的基本流程&lt;/h2&gt;

&lt;h3 id=&quot;安装ruby-rails&quot;&gt;安装Ruby, Rails&lt;/h3&gt;
&lt;p&gt;建议在Linux的发行版本(Ubuntu,CentOs, Redhat, ArchLinux…) 或者 Mac Os X安装。&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/ruby-china/homeland/wiki/Mac-OS-X-%E4%B8%8A%E5%AE%89%E8%A3%85-Ruby&quot;&gt;Mac OS X上安装ruby&lt;/a&gt; 来安装&lt;/li&gt;
  &lt;li&gt;如果需要不同版本的ruby可以&lt;a href=&quot;https://ruby-china.org/wiki/install_ruby_guide&quot;&gt;安装 RVM&lt;/a&gt;来进行ruby版本管理&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;安装jekyll&quot;&gt;安装jekyll&lt;/h3&gt;
&lt;p&gt;该博客使用了 &lt;a href=&quot;https://jekyllrb.com/&quot;&gt;Jekyll&lt;/a&gt;, 当然好多同学可能会用 &lt;a href=&quot;https://hexo.io/themes/&quot;&gt;Hexo&lt;/a&gt; 这个就是萝卜青菜了。
如果你选择使用Jekyll请安装下面步骤安装生成:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-shell&quot;&gt;~ $ gem install jekyll bundler
~ $ jekyll new my-awesome-site
~ $ cd my-awesome-site
~/my-awesome-site $ bundle exec jekyll serve
# =&amp;gt; Now browse to http://localhost:4000

&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;生产的项目结构类似&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;.
├── _config.yml    //项目相关配置文件
├── _data
|   └── members.yml   //一些需要的数据
├── _drafts           //草稿
|   ├── begin-with-the-crazy-ideas.md
|   └── on-simplicity-in-technology.md
├── _includes         //公共的部分
|   ├── footer.html
|   └── header.html
├── _layouts           //布局文件
|   ├── default.html
|   └── post.html
├── _posts             //发布的文章
|   ├── 2007-10-29-why-every-programmer-should-play-nethack.md
|   └── 2009-04-26-barcamp-boston-4-roundup.md
├── _sass              //sass文件路径编译后生产css
|   ├── _base.scss
|   └── _layout.scss
├── _site              //所有文件编译生产静态文件都存放到这里
├── .jekyll-metadata
└── index.html # can also be an 'index.md' with valid YAML Frontmatter
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;具体还有其他目录请参考&lt;a href=&quot;https://jekyllrb.com/docs/structure/&quot;&gt;jekyll目录结构&lt;/a&gt;&lt;/p&gt;

&lt;h3 id=&quot;安装主题&quot;&gt;安装主题&lt;/h3&gt;
&lt;p&gt;到这里你应该可以访问一个页面了,但是离我们心中的博客相差甚远。我们需要给项目增加一个 &lt;a href=&quot;http://jekyllthemes.org/&quot;&gt;Jekyll 主题&lt;/a&gt; ,当然如果在套用别人主题的时候有问题可以看一下
&lt;a href=&quot;http://www.jianshu.com/p/4224b8ea0ec0&quot;&gt;Liquid语法&lt;/a&gt;,和markdown语法,因为我在套用黄玄的博客时就遇到了语法问题,可能是ruby版本更新导致。这些语法问题都可以在文档中找到答案,所以还是要仔细读文档&lt;/p&gt;

&lt;p&gt;到此博客已经能够访问并且有了主题,如果添加新的文章只需要按照固定格式套用即可。&lt;/p&gt;

&lt;p&gt;参考文章&lt;/p&gt;

&lt;blockquote&gt;
  &lt;ul&gt;
    &lt;li&gt;&lt;a href=&quot;https://crispgm.com/page/48-tips-for-jekyll-you-should-know.html&quot;&gt;48 个你需要知道的 Jekyll 使用技巧
&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href=&quot;http://www.zhanxin.info/journal/&quot;&gt;掌心&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href=&quot;https://blog.ixxoo.me/&quot;&gt;likebeta’s Blog
&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href=&quot;http://blog.csdn.net/maoxunxing/article/details/40479753&quot;&gt;jekyll翻译文章&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href=&quot;http://ibloodline.com/articles/2014/12/15/jekyll-syntax.html&quot;&gt;jekyll语法简单笔记&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href=&quot;http://alfred-sun.github.io/blog/2014/12/05/github-pages/&quot;&gt;GitHub Pages 静态博客 - 个人建站实录
&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href=&quot;http://harttle.com/2013/10/18/github-homepage-tutorial.html&quot;&gt;部署自己的博客&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href=&quot;https://mritd.me/2017/02/25/jekyll-blog-+-travis-ci-auto-deploy/&quot;&gt;杨缘的博客参考&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href=&quot;http://yerl.cn/blog/use-jekyll-build-your-blog&quot;&gt;poison&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href=&quot;http://jekyllcn.com/docs/plugins/&quot;&gt;jekyll官网中文&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href=&quot;http://www.thomaszhao.cn/2015/01/08/how-do-i-build-this-jekyll-blog/&quot;&gt;适合程序员的Blog – 基于github pages + jekyll + markdown打造自己的blog&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href=&quot;http://www.w3cboy.com/post/2016/03/travisci-hexo-deploy/&quot;&gt;使用travis-ci自动部署hexo博客&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href=&quot;http://t.hengwei.me/post/%E4%B8%BAjekyll%E5%8D%9A%E5%AE%A2%E6%B7%BB%E5%8A%A0%E7%9B%AE%E5%BD%95%E4%B8%8Escrollspy%E6%95%88%E6%9E%9C.html&quot;&gt;为Jekyll博客添加目录与ScrollSpy效果&lt;/a&gt;&lt;/li&gt;
  &lt;/ul&gt;
&lt;/blockquote&gt;</content><author><name>toshiba</name></author><category term="博客搭建" /><category term="JavaScript" /><summary type="html">第一次搭建博客</summary></entry></feed>